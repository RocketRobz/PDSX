#include "psxmenu.h"

#include "bg_blue.h"

static bool menu_bgLoaded = false;
static bool musicStopped = false;
static bool displayMenuGraphics = false;
static int menu_cursor = 0;
static bool menu_textFade = false;

static int menu_textFadeColor = 255;	// 0 when faded out

extern int psConsoleModel;					// 0 = Playstation -> PS, 1 = PSone

extern int pressed;

extern int blueBgTexID, gridBgTexID;
extern glImage blueBgImage[(128 / 16) * (192 / 16)];
extern glImage blueBallsImage[(64 / 16) * (128 / 64)];
extern glImage mainMenuImage[(128 / 16) * (32 / 16)];
extern glImage inkedButtonImage[(128 / 16) * (32 / 16)];
extern glImage memandcdImage[(128 / 16) * (64 / 16)];
extern glImage menuCursorImage[(16 / 16) * (32 / 16)];

void psxMenuInit(void) {
	if (psConsoleModel == 0) {
		if (!menu_bgLoaded) {
			glDeleteTextures(1, &gridBgTexID);
			blueBgTexID = glLoadTileSet(blueBgImage, // pointer to glImage array
									128, // sprite width
									192, // sprite height
									128, // bitmap width
									192, // bitmap height
									GL_RGB256, // texture type for glTexImage2D() in videoGL.h
									TEXTURE_SIZE_128, // sizeX for glTexImage2D() in videoGL.h
									TEXTURE_SIZE_256, // sizeY for glTexImage2D() in videoGL.h
									GL_TEXTURE_WRAP_S | GL_TEXTURE_WRAP_T | TEXGEN_OFF, // param for glTexImage2D() in videoGL.h
									256, // Length of the palette to use (256 colors)
									(u16*) bg_bluePal, // Load our 256 color tiles palette
									(u8*) bg_blueBitmap // image data generated by GRIT
									);
			menu_bgLoaded = true;
		}
	} else {
		menu_bgLoaded = false;
	}

	musicStopped = false;
	displayMenuGraphics = false;
	menu_cursor = 0;
	menu_textFade = false;

	menu_textFadeColor = 255;
}

void psxMenu(void) {
	if (!musicStopped) {
		for (int i = 0; i < 30; i++) {
			swiWaitForVBlank();
			if (i == 29) {
				mmEffectCancelAll();	// Stop SPE logo music
			}
		}
		musicStopped = true;
	}

	displayMenuGraphics = true;

	if (menu_textFade) {
		menu_textFadeColor -= 10;
		if (menu_textFadeColor < 0) {
			menu_textFadeColor = 255;
			menu_textFade = false;
		}
	} else {
		if (pressed & KEY_UP) {
			menu_cursor--;
			if (menu_cursor < 0) menu_cursor = 0;
		}

		if (pressed & KEY_DOWN) {
			menu_cursor++;
			if (menu_cursor > 1) menu_cursor = 1;
		}

		if (pressed & KEY_A) {
			menu_textFade = true;
		}
	}

	swiWaitForVBlank();
}

void psxMenuGraphicDisplay(void) {
	glSprite(0, 0, GL_FLIP_NONE, blueBgImage);
	glSprite(128, 0, GL_FLIP_H, blueBgImage);
	if (displayMenuGraphics) {
		glSprite(39, 6, GL_FLIP_NONE, &blueBallsImage[0]);
		glSprite(83, 128, GL_FLIP_NONE, &blueBallsImage[1]);
		glSprite(181, 17, GL_FLIP_NONE, mainMenuImage);
		glSprite(22, 79, GL_FLIP_NONE, inkedButtonImage);
		glSprite(22, 119, GL_FLIP_NONE, inkedButtonImage);
		if (menu_cursor == 0) {
			glColor(RGB15(menu_textFadeColor/8, menu_textFadeColor/8, menu_textFadeColor/8));
			glSprite(10, 87, GL_FLIP_NONE, &memandcdImage[0]);			// Zoomed-in "Memory Card"
			glColor(RGB15(31, 31, 31));
			glSprite(26, 127, GL_FLIP_NONE, &memandcdImage[3]);		// Zoomed-out "CD Player"
			if (!menu_textFade) glSprite(66, 94, GL_FLIP_NONE, &menuCursorImage[0]);
		} else {
			glSprite(10, 87, GL_FLIP_NONE, &memandcdImage[1]);			// Zoomed-out "Memory Card"
			glColor(RGB15(menu_textFadeColor/8, menu_textFadeColor/8, menu_textFadeColor/8));
			glSprite(26, 127, GL_FLIP_NONE, &memandcdImage[2]);		// Zoomed-in "CD Player"
			glColor(RGB15(31, 31, 31));
			if (!menu_textFade) glSprite(66, 135, GL_FLIP_NONE, &menuCursorImage[0]);
		}
	}
	glColor(RGB15(31, 31, 31));
}